[
  {
    "Id": "154187",
    "ThreadId": "46186",
    "Html": "I've been looking for something like this for a long time - very cool.&nbsp; <br>\r\n<br>\r\nHope I'm not missing something obvious, but I can't seem to find a way to customize the transformation of one property to another inline - is it supported?<br>\r\n<br>\r\nAs an example, I'm trying to do something similar to the following :<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var entryPointTypeConverter = new EntryPointTypeConverter();<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Mapper.CreateMap&lt;EntryPoint, EnvironmentEntryPoint&gt;()<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .ForMember(x =&gt; x.EntryPointType, x =&gt; x.MapFrom(y =&gt; entryPointTypeConverter.Convert(y.EntryPointType)));<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Mapper.Map&lt;EntryPoint, EnvironmentEntryPoint&gt;(<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new EntryPoint {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Id = 1, <br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; EntryPointType = new EntryPointType {Id = 1}<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; );<br>\r\n<br>\r\n<br>\r\nwhere the member found on the source class is a POCO with members { Id, Description }, and&nbsp; EntryPointType (on the destination) is an enum.&nbsp;&nbsp;&nbsp; I'm getting the following exception:<br>\r\n<br>\r\nObject does not match target type.<br>\r\n&nbsp;&nbsp; &nbsp;System.Reflection.TargetException: Object does not match target type.<br>\r\n&nbsp;&nbsp; &nbsp;at System.Reflection.RuntimeMethodInfo.CheckConsistency(Object target)<br>\r\n&nbsp;&nbsp; &nbsp;at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)<br>\r\n&nbsp;&nbsp; &nbsp;at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)<br>\r\n&nbsp;&nbsp; &nbsp;at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)<br>\r\n&nbsp;&nbsp; &nbsp;at AutoMapper.MethodMember.GetValue(Object obj)<br>\r\n&nbsp;&nbsp; &nbsp;at AutoMapper.MappingEngine.ResolveModelMemberValue(PropertyMap propertyMap, Object input)<br>\r\n&nbsp;&nbsp; &nbsp;at AutoMapper.MappingEngine.CreateMappedObject(ResolutionContext context)<br>\r\n&nbsp;&nbsp; &nbsp;at AutoMapper.MappingEngine.Map(ResolutionContext context)<br>\r\n&nbsp;&nbsp; &nbsp;at AutoMapper.MappingEngine.Map(Object source, Type sourceType, Type destinationType)<br>\r\n&nbsp;&nbsp; &nbsp;at AutoMapper.MappingEngine.Map[TSource,TDestination](TSource source)<br>\r\n&nbsp;&nbsp; &nbsp;at AutoMapper.Mapper.Map[TSource,TDestination](TSource source)<br>\r\n<br>\r\n<br>\r\nI can use a IValueResolver for this, but it seems like overkill - the same source type can be contained in different types, and if I follow this route I'll need to deal with different types in the resolver (or write a resolver for each mapped source type).&nbsp; <br>\r\n<br>\r\nThanks,<br>\r\nRiaan <br>\r\n",
    "PostedDate": "2009-02-04T04:13:38.993-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "154189",
    "ThreadId": "46186",
    "Html": "Hi Riann,<br><br>What version are you running against?  This looks like something we may have patched recently.<br><br>Thanks,<br><br>Jimmy<br><br><div>On Wed, Feb 4, 2009 at 6:13 AM, rhanekom <span dir=ltr>&lt;<a href=\"mailto:notifications@codeplex.com\">notifications@codeplex.com</a>&gt;</span> wrote:<br>\r\n<blockquote style=\"margin:0pt 0pt 0pt 0.8ex;padding-left:1ex\">   <div> <p>From: rhanekom</p> <div>I've been looking for something like this for a long time - very cool.  <br>\r\n\r\n<br>\r\nHope I'm not missing something obvious, but I can't seem to find a way to customize the transformation of one property to another inline - is it supported?<br>\r\n<br>\r\nAs an example, I'm trying to do something similar to the following :<br>\r\n<br>\r\n{{<br>\r\n            var entryPointTypeConverter = new EntryPointTypeConverter();<br>\r\n<br>\r\n            Mapper.CreateMap&lt;EntryPoint, EnvironmentEntryPoint&gt;()<br>\r\n               .ForMember(x =&gt; x.EntryPointType, x =&gt; x.MapFrom(y =&gt; entryPointTypeConverter.Convert(y.EntryPointType)));<br>\r\n<br>\r\n            Mapper.Map&lt;EntryPoint, EnvironmentEntryPoint&gt;(<br>\r\n                new EntryPoint {<br>\r\n                    Id = 1, <br>\r\n                    EntryPointType = new EntryPointType {Id = 1}<br>\r\n                }<br>\r\n            );<br>\r\n}}<br>\r\n<br>\r\nwhere the member found on the source class is a POCO with members { Id, Description }, and  EntryPointType (on the destination) is an enum.    I'm getting the following exception:<br>\r\n{{<br>\r\nObject does not match target type.<br>\r\n    System.Reflection.TargetException: Object does not match target type.<br>\r\n    at System.Reflection.RuntimeMethodInfo.CheckConsistency(Object target)<br>\r\n    at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks)<br>\r\n    at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)<br>\r\n    at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)<br>\r\n    at AutoMapper.MethodMember.GetValue(Object obj)<br>\r\n    at AutoMapper.MappingEngine.ResolveModelMemberValue(PropertyMap propertyMap, Object input)<br>\r\n    at AutoMapper.MappingEngine.CreateMappedObject(ResolutionContext context)<br>\r\n    at AutoMapper.MappingEngine.Map(ResolutionContext context)<br>\r\n    at AutoMapper.MappingEngine.Map(Object source, Type sourceType, Type destinationType)<br>\r\n    at AutoMapper.MappingEngine.Map[TSource,TDestination](TSource source)<br>\r\n    at AutoMapper.Mapper.Map[TSource,TDestination](TSource source)<br>\r\n}}<br>\r\n<br>\r\nI can use a IValueResolver for this, but it seems like overkill - the same source type can be contained in different types, and if I follow this route I'll need to deal with different types in the resolver (or write a resolver for each mapped source type).  <br>\r\n\r\n<br>\r\nThanks,<br>\r\nRiaan <br>\r\n</div> <div> <p>Read the <a href=\"http://www.codeplex.com/AutoMapper/Thread/View.aspx?ThreadId=46186&ANCHOR#Post154187\">full discussion online</a>.</p> <p>To add a post to this discussion, reply to this email (<a href=\"mailto:AutoMapper@discussions.codeplex.com?subject=[AutoMapper:46186]\">AutoMapper@discussions.codeplex.com</a>)</p>\r\n <p>To start a new discussion for this project, email <a href=\"mailto:AutoMapper@discussions.codeplex.com\">AutoMapper@discussions.codeplex.com</a></p> <p>You are receiving this email because you subscribed to this discussion on CodePlex. You can <a href=\"http://www.codeplex.com/site/discussions/project/unsubscribe/AutoMapper\">unsubscribe or change your settings</a> on codePlex.com.</p>\r\n <p>Please note: Images and attachments will be removed from emails. Any posts to this discussion will also be available online at <a href=\"http://codeplex.com\">codeplex.com</a></p> </div> </div> </blockquote>\r\n</div><br>",
    "PostedDate": "2009-02-04T04:21:47.047-08:00",
    "UserRole": "Coordinator",
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "154192",
    "ThreadId": "46186",
    "Html": "<br>\r\n<span id=\"ctl00_ctl00_MasterContent_RightSideBar_CurrentRelease_Sidebar_releaseTitleLabel\">0.1.0.37555 Alpha.<br>\r\n<br>\r\nWill try with the latest source, and let you know.<br>\r\n<br>\r\nCheers,<br>\r\nRiaan </span>\r\n",
    "PostedDate": "2009-02-04T04:30:47.197-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "155259",
    "ThreadId": "46186",
    "Html": "Hi Jimmy<br>\r\n<br>\r\nThis issue is not present in the latest revision.<br>\r\n<br>\r\nThanks!<br>\r\nRiaan<br>\r\n",
    "PostedDate": "2009-02-06T21:20:23.87-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]