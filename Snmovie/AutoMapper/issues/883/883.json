{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Fixed this one in R52 or so.  It'll be in the 0.3.0 release.",
    "ClosedDate": "2009-04-04T18:25:25.4-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "I use IDataErrorInfo in my viewmodels and I can't get the mapper to map to a viewmodel with an indexer property ( public string this[string columnname] { get; })\nÂ \nThis issue can be resolved by adding .Where(p => !p.GetIndexParameters().Any()) to the ReflectionExtensions.ReflectionHelper.GetPublicGetProperties method. The unit tests still run.",
    "LastUpdatedDate": "2013-05-16T04:59:08.463-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "AutoMapper",
    "ReportedDate": "2009-02-05T08:01:48.55-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Map to class with property with indexer",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 883
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Would it be possible to provide a failing unit test for this issue?  Even though that fix doesn't break existing unit tests, I'd like to lock down that scenario to prevent regression bugs.  Thanks!",
      "PostedDate": "2009-02-22T13:43:24.067-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2009-04-04T18:25:25.4-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T17:49:27.89-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T04:59:08.463-07:00",
      "Id": -2147483648
    }
  ]
}