{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "All issues moved to GitHub https&#58;&#47;&#47;github.com&#47;AutoMapper&#47;AutoMapper&#47;issues",
    "ClosedDate": "2011-09-02T15:46:42.507-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "How can I map this type of object?\n \npublic class DrawingFileEx : EntityBase\n    {\n        public DrawingFileEx()\n        {\n        }\n \n        private string _FileName;\n        [DataMember]\n        public string FileName\n        {\n            get { return _FileName; }\n            set\n            {\n                _FileName = value;\n                RaisePropertyChanged(\"FileName\");\n            }\n        }\n \n       private IEnumerable<DrawingFileEx> _SubDrawing;\n        [DataMember]\n        public IEnumerable<DrawingFileEx> SubDrawing\n        {\n            get { return _SubDrawing; }\n            set\n            {\n                _SubDrawing = value;\n                RaisePropertyChanged(\"SubDrawing\");\n            }\n        }\n    }\n \n \n \n \nThis will/can create a TreeView structure. Is it possible to use AutoMapper for this??",
    "LastUpdatedDate": "2013-05-16T04:58:56.36-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "AutoMapper",
    "ReportedDate": "2011-05-10T06:49:12.167-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "AutoMapper and Parent-Child mapping",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 6605
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "See work item 6044 => http://automapper.codeplex.com/workitem/6044\r\n\r\nyou want to use MapFrom<>, something to this effect...\r\nMapper.CreateMap<DrawingFileEx, DrawingFileTreeView>()                        \r\n\t.ForMember(dest => dest.SubDrawing, opt => opt.MapFrom<IEnumerable<DrawingFileEx>>(src => src.SubDrawing))\t\r\n\r\n",
      "PostedDate": "2011-05-11T07:51:37.21-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2011-09-02T15:46:42.507-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T17:49:13.153-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T04:58:56.36-07:00",
      "Id": -2147483648
    }
  ]
}