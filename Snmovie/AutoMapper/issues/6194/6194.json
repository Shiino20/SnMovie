{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "All issues moved to GitHub https&#58;&#47;&#47;github.com&#47;AutoMapper&#47;AutoMapper&#47;issues",
    "ClosedDate": "2011-09-02T15:46:03.12-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "My database contains a char field containing Y/N which was mapped to a boolean property of the same name. This worked fine as the DataReaderMapper ignores the char value returned from the database. But when I changed the property to a nullable boolean the mapper failed with an InvalidCastException, and there's no way to ignore this property using the standard Automapper ignore option.\n \nThe problem appears to be with this line of code in DataReaderMapper where the database value is set up for coercion to the destination property type rather than the database type:\n \nif (propertyInfo.PropertyType.IsGenericType\n\t&& propertyInfo.PropertyType.Name.Equals(typeof(Nullable<>).Name))\n{\n\tgenerator.Emit(OpCodes.Unbox_Any, propertyInfo.PropertyType);\n}\nelse\n{\n\tgenerator.Emit(OpCodes.Unbox_Any, dataRecord.GetFieldType(i));\n}\n \n=======================\nException of type 'AutoMapper.AutoMapperMappingException' was thrown.\n  ----> System.InvalidCastException : Specified cast is not valid.\n\tat AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\n\tat AutoMapper.MappingEngine.Map(Object source, Type sourceType, Type destinationType)\n\tat AutoMapper.MappingEngine.Map[TSource,TDestination](TSource source)\n\tat AutoMapper.Mapper.Map[TSource,TDestination](TSource source)",
    "LastUpdatedDate": "2013-05-16T04:58:58.357-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "AutoMapper",
    "ReportedDate": "2011-02-03T09:54:06.643-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "DataReaderMapper throws InvalidCastException when mapping to nullable type",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 2,
    "Id": 6194
  },
  "FileAttachments": [],
  "Comments": []
}